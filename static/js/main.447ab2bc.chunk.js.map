{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","utils/helpers.js","components/generic/Button.js","components/generic/DisplayTime.js","components/generic/Panel.js","components/generic/Settings.js","views/DocumentationView.js","TimerProvider.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","components/generic/Navbar.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","props","title","component","propDocs","map","doc","i","prop","description","type","defaultValue","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","COLORS","Btn","button","Button","btnState","settingsState","styleName","className","onClick","sendBtnState","sendSettingsState","Display","label","propTypes","PropTypes","string","time","DisplayTime","useState","Panel","timerType","children","SetTime","input","Credentials","p","Settings","placeholder","placeholderRounds","placeholderRest","TimerContext","createContext","setBtnState","console","log","setSettingsState","TimerProvider","Provider","value","h1","UpperPanel","LowerPanel","Stopwatch","useContext","CountDown","Xy","Tabata","NavList","ul","links","name","path","Navbar","link","index","to","exact","activeClassName","Timers","App","routes","Countdown","XY","key","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGMA,EAAUC,IAAOC,IAAV,+EAKPC,EAAYF,IAAOC,IAAV,mGAMTE,EAAQH,IAAOC,IAAV,sHAOLG,EAAkBJ,IAAOC,IAAV,wFAMfI,EAAgBL,IAAOM,MAAV,0BAqCJC,EAnCW,SAACC,GACzB,OACE,eAACT,EAAD,WACE,cAACI,EAAD,UAAQK,EAAMC,QACd,eAACP,EAAD,WACE,cAACE,EAAD,UAAkBI,EAAME,YACxB,eAAC,EAAD,WACE,gCACE,+BACE,sCACA,6CACA,sCACA,oDAGHF,EAAMG,SAASC,KAAI,SAACC,EAAKC,GACxB,OACE,gCACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,cACT,6BAAKH,EAAII,OACT,6BACE,+BAAOJ,EAAIK,qBANLJ,gBCxCpBK,EAAc,CAClBC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAGHpB,EAAYF,IAAOC,IAAV,wXAqBTsB,EAAMvB,IAAOwB,KAAV,qXAEE,SAAChB,GAAD,OAAWA,EAAMiB,QAChB,SAACjB,GAAD,OAAWA,EAAMiB,QACP,SAACjB,GAAD,OAAWA,EAAMkB,SAiBjCC,EAAW3B,IAAOC,IAAV,8CAIR2B,EAAU,SAACpB,GACf,IAAMiB,EAAON,EAAYX,EAAMiB,MACvBC,EAAUlB,EAAVkB,MAER,OACE,eAAC,EAAD,WACE,eAACC,EAAD,WACE,cAACJ,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,IACxB,cAACH,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,OAE1B,eAACC,EAAD,WACE,cAACJ,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,IACxB,cAACH,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,WAWhCE,EAAQC,aAAe,CACrBJ,KAAM,SACNC,MA/EmB,WAkFNE,I,IAAAA,ICnFFE,EACA,UADAA,EAEA,UAFAA,EAGP,UAHOA,EAIH,UAJGA,EAMJ,UANIA,EAOL,UAPKA,EAQJ,UARIA,EASL,UATKA,EAUN,UCRDC,EAAM/B,IAAOgC,OAAV,gPAMEF,GAKW,SAACtB,GAAD,MACH,UAAfA,EAAMS,KACFa,EACe,SAAftB,EAAMS,KACNa,EACAA,KAgDOG,EA7CA,SAATA,EAAUzB,GACdyB,EAAOJ,aAAe,CACpBK,UAAU,EACVC,eAAe,EACfC,UAAW,cACXnB,KAAM,aAUR,OACE,cAACc,EAAD,CACEM,UAAW7B,EAAM4B,UACjBnB,KAAMT,EAAMS,KACZqB,QAAS,WAXI,UAAf9B,EAAMS,KACFT,EAAM+B,cAAa,GACnB/B,EAAM+B,cAAc/B,EAAM0B,UAWF,gBAApB1B,EAAM4B,WARd5B,EAAMgC,mBAAmBhC,EAAM2B,gBAG/B,SAUkB,UAAf3B,EAAMS,KACL,mBAAGoB,UAAU,iCACI,UAAf7B,EAAMS,KACR,mBAAGoB,UAAU,sBACI,SAAf7B,EAAMS,KACR,mBAAGoB,UAAU,uBACS,gBAApB7B,EAAM4B,UACR,mBAAGC,UAAU,eACX,Q,wBCrDJI,EAAUzC,IAAO0C,MAAV,wUAUYZ,GAWzBW,EAAQE,UAAY,CAClBP,UAAWQ,IAAUC,OACrBC,KAAMF,IAAUC,QAGHE,I,uDAAAA,GAbK,SAACvC,GACnBiC,EAAQZ,aAAe,CACrBO,UAAW,UACXU,KAAM,KAER,MAAeE,mBAASxC,EAAMsC,MAAvBA,EAAP,oBACA,OAAO,cAACL,EAAD,CAASJ,UAAW7B,EAAM4B,UAA1B,SAAsCU,KCnBzC5C,GAAYF,IAAOC,IAAV,sPAGO,SAACO,GAAD,MACH,cAAfA,EAAMS,KACFa,EACe,cAAftB,EAAMS,KACNa,EACe,OAAftB,EAAMS,KACNa,EACAA,KAuBOmB,GAfD,SAARA,EAASzC,GAIb,OAHAyC,EAAMpB,aAAe,CACnBqB,UAAW,aAGX,cAAC,GAAD,CAAWjC,KAAMT,EAAM0C,UAAWb,UAAU,YAA5C,SACG7B,EAAM2C,YCzBPC,GAAUpD,IAAOqD,MAAV,0JAEF,SAAC7C,GAAD,MACQ,cAAfA,EAAMS,KACFa,EACe,cAAftB,EAAMS,KACNa,EACe,OAAftB,EAAMS,KACNa,EACAA,KAOFwB,GAActD,IAAOuD,EAAV,wFAENzB,GAgDI0B,GA5CE,SAAXA,EAAYhD,GAQhB,OAPAgD,EAAS3B,aAAe,CACtBZ,KAAM,YACNiC,UAAW,YACXO,YAAa,QACbC,kBAAmB,QACnBC,gBAAiB,SAGjB,sBAAKtB,UAAU,OAAf,UACkB,cAAf7B,EAAMS,KACL,cAACmC,GAAD,CACEnC,KAAMT,EAAMS,KACZoB,UAAW7B,EAAM4B,UACjBqB,YAAajD,EAAMiD,cAEnB,KACY,OAAfjD,EAAMS,MAAgC,WAAfT,EAAMS,KAC5B,cAACmC,GAAD,CACEnC,KAAMT,EAAMS,KACZoB,UAAW7B,EAAM4B,UACjBqB,YAAajD,EAAMkD,oBAEnB,KACY,WAAflD,EAAMS,KACL,cAACmC,GAAD,CACEnC,KAAMT,EAAMS,KACZoB,UAAW7B,EAAM4B,UACjBqB,YAAajD,EAAMmD,kBAEnB,KACJ,cAACL,GAAD,qCC9CApD,GAAYF,IAAOC,IAAV,0FAMTE,GAAQH,IAAOC,IAAV,gDA0HII,GAtHO,WACpB,OACE,cAAC,GAAD,UACE,gCACE,cAAC,GAAD,4BACA,cAAC,EAAD,CACEI,MAAM,mBACNC,UAAW,cAAC,EAAD,IACXC,SAAU,CACR,CACEI,KAAM,OACNC,YAAa,0CACbC,KAAM,SACNC,aAAc,aAIpB,cAAC,EAAD,CACET,MAAM,SACNC,UAAW,cAAC,EAAD,IACXC,SAAU,CACR,CACEI,KAAM,WACNC,YAAa,6BACbC,KAAM,UACNC,aAAc,QAEhB,CACEH,KAAM,gBACNC,YAAa,yCACbC,KAAM,UACNC,aAAc,SAEhB,CACEH,KAAM,YACNC,YAAa,qBACbC,KAAM,SACNC,aAAc,eAEhB,CACEH,KAAM,OACNC,YAAa,4CACbC,KAAM,SACNC,aAAc,gBAIpB,cAAC,EAAD,CACET,MAAM,cACNC,UAAW,cAAC,GAAD,IACXC,SAAU,CACR,CACEI,KAAM,YACNC,YAAa,qBACbC,KAAM,SACNC,aAAc,WAEhB,CACEH,KAAM,OACNC,YAAa,sBACbC,KAAM,SACNC,aAAc,QAIpB,cAAC,EAAD,CACET,MAAM,QACNC,UAAW,cAAC,GAAD,IACXC,SAAU,CACR,CACEI,KAAM,YACNC,YAAa,wBACbC,KAAM,SACNC,aAAc,cAIpB,cAAC,EAAD,CACET,MAAM,WACNC,UAAW,cAAC,GAAD,IACXC,SAAU,CACR,CACEI,KAAM,OACNC,YAAa,wBACbC,KAAM,SACNC,aAAc,aAEhB,CACEH,KAAM,YACNC,YAAa,iCACbC,KAAM,SACNC,aAAc,aAEhB,CACEH,KAAM,cACNC,YAAa,iDACbC,KAAM,SACNC,aAAc,SAEhB,CACEH,KAAM,oBACNC,YAAa,8CACbC,KAAM,SACNC,aAAc,SAEhB,CACEH,KAAM,kBACNC,YAAa,4CACbC,KAAM,SACNC,aAAc,kBChIf0C,GAAeC,wBAAc,CACxCC,YAAa,WACXC,QAAQC,IAAI,8CAEdC,iBAAkB,WAChBF,QAAQC,IAAI,qDAiBDE,GAbO,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SACvB,EAAgCH,oBAAS,GAAzC,mBAAOd,EAAP,KAAiB4B,EAAjB,KACA,EAA0Cd,oBAAS,GAAnD,mBAAOb,EAAP,KAAsB8B,EAAtB,KAEA,OACE,cAACL,GAAaO,SAAd,CACEC,MAAO,CAAElC,WAAU4B,cAAa3B,gBAAe8B,oBADjD,SAGGd,KCVDhD,GAAQH,IAAOqE,GAAV,4CACAvC,GAELwC,GAAatE,IAAOC,IAAV,usBAIH6B,EAqBEA,GAmBTyC,GAAavE,IAAOC,IAAV,gDAmEDuE,GA/DG,WAChB,IAAMtB,EAAY,YAClB,EAAkCuB,qBAAWb,IAArC1B,EAAR,EAAQA,SAAU4B,EAAlB,EAAkBA,YAClB,EAA4CW,qBAAWb,IAA/CzB,EAAR,EAAQA,cAAe8B,EAAvB,EAAuBA,iBAEvB,OAAK9B,EA2CH,cAAC,GAAD,CAAOe,UAAWA,EAAlB,SACE,eAACoB,GAAD,CAAYjC,UAAU,+DAAtB,UACE,cAAC,EAAD,CACEpB,KAAMkB,EAAgB,eAAiB,gBACvCC,UAAU,cACVF,SAAUA,EACVC,cAAeA,EACfI,aAAcuB,EACdtB,kBAAmByB,IAErB,cAAC,GAAD,CAAU7B,UAAU,MAAMnB,KAAK,mBAnDjC,eAAC,GAAD,CAAOiC,UAAWA,EAAlB,UACE,eAACoB,GAAD,CAAYjC,UAAU,cAAtB,UACE,cAAC,GAAD,UAAQa,IACR,cAAC,EAAD,CACEjC,KAAMkB,EAAgB,eAAiB,gBACvCC,UAAU,cACVF,SAAUA,EACVC,cAAeA,EACfI,aAAcuB,EACdtB,kBAAmByB,IAErB,mBAAG5B,UAAS,oCAA+BH,QAE7C,cAACqC,GAAD,CAAYlC,UAAU,4BAAtB,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,GAAD,CACED,UAAU,kBACVU,KAAI,WAAM,EAAN,KAAY,EAAZ,KAAkB,OAG1B,sBAAKT,UAAU,6BAAf,UACE,cAAC,EAAD,CACED,UAAU,QACVF,SAAUA,EACVjB,KAAMiB,EAAW,QAAU,OAC3BK,aAAcuB,IAEhB,cAAC,EAAD,CACE1B,UAAU,QACVF,SAAUA,EACVjB,KAAK,QACLsB,aAAcuB,gBC1FxB3D,GAAQH,IAAOqE,GAAV,4CACAvC,GAELwC,GAAatE,IAAOC,IAAV,ksBAIH6B,EAqBEA,GAmBTyC,GAAavE,IAAOC,IAAV,gDAkFDyE,GA9EG,WAChB,IAAMxB,EAAY,YAClB,EAAkCuB,qBAAWb,IAArC1B,EAAR,EAAQA,SAAU4B,EAAlB,EAAkBA,YAMlB,EAA4CW,qBAAWb,IAA/CzB,EAAR,EAAQA,cAAe8B,EAAvB,EAAuBA,iBAQvB,OAAK9B,EA2CH,cAAC,GAAD,CAAOe,UAAWA,EAAlB,SACE,eAAC,GAAD,CAAYb,UAAU,+DAAtB,UACE,cAAC,EAAD,CACEpB,KAAMkB,EAAgB,eAAiB,gBACvCC,UAAU,cACVF,SAAUA,EACVC,cAAeA,EACfI,aAAcuB,EACdtB,kBAAmByB,IAErB,cAAC,GAAD,CACE7B,UAAU,MACVqB,YAAY,kCACZxC,KAAK,mBAtDT,eAAC,GAAD,CAAOiC,UAAWA,EAAlB,UACE,eAAC,GAAD,CAAYb,UAAU,cAAtB,UACE,cAAC,GAAD,UAAQa,IACR,cAAC,EAAD,CACEjC,KAAMkB,EAAgB,eAAiB,gBACvCC,UAAU,cACVF,SAAUA,EACVC,cAAeA,EACfI,aAAcuB,EACdtB,kBAAmByB,IAErB,mBAAG5B,UAAS,+BAA0BH,QAExC,cAAC,GAAD,CAAYG,UAAU,4BAAtB,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,GAAD,CACED,UAAU,kBACVU,KAAI,WAAM,EAAN,KAAY,EAAZ,KAAkB,OAG1B,sBAAKT,UAAU,6BAAf,UACE,cAAC,EAAD,CACED,UAAU,QACVF,SAAUA,EACVjB,KAAMiB,EAAW,QAAU,OAC3BK,aAAcuB,IAEhB,cAAC,EAAD,CACE1B,UAAU,QACVF,SAAUA,EACVjB,KAAK,QACLsB,aAAcuB,gBCrGxB3D,GAAQH,IAAOqE,GAAV,4CACAvC,GAELwC,GAAatE,IAAOC,IAAV,ksBAIH6B,EAqBEA,GAmBTyC,GAAavE,IAAOC,IAAV,gDAgFD0E,GA5EJ,WACT,IAAMzB,EAAY,KAClB,EAAkCuB,qBAAWb,IAArC1B,EAAR,EAAQA,SAAU4B,EAAlB,EAAkBA,YAKlB,EAA4CW,qBAAWb,IAA/CzB,EAAR,EAAQA,cAAe8B,EAAvB,EAAuBA,iBAMvB,OAAK9B,EA2CH,cAAC,GAAD,CAAOe,UAAWA,EAAlB,SACE,eAAC,GAAD,CAAYb,UAAU,+DAAtB,UACE,cAAC,EAAD,CACEpB,KAAMkB,EAAgB,eAAiB,gBACvCC,UAAU,cACVF,SAAUA,EACVC,cAAeA,EACfI,aAAcuB,EACdtB,kBAAmByB,IAErB,cAAC,GAAD,CACE7B,UAAU,MACVqB,YAAY,kCACZC,kBAAkB,yBAClBzC,KAAK,YAvDT,eAAC,GAAD,CAAOiC,UAAWA,EAAlB,UACE,eAAC,GAAD,CAAYb,UAAU,cAAtB,UACE,cAAC,GAAD,UAAQa,IACR,cAAC,EAAD,CACEjC,KAAMkB,EAAgB,eAAiB,gBACvCC,UAAU,cACVF,SAAUA,EACVC,cAAeA,EACfI,aAAcuB,EACdtB,kBAAmByB,IAErB,mBAAG5B,UAAS,+BAA0BH,QAExC,cAAC,GAAD,CAAYG,UAAU,4BAAtB,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,GAAD,CACED,UAAU,kBACVU,KAAI,WAAM,EAAN,KAAY,EAAZ,KAAkB,OAG1B,sBAAKT,UAAU,6BAAf,UACE,cAAC,EAAD,CACED,UAAU,QACVF,SAAUA,EACVjB,KAAMiB,EAAW,QAAU,OAC3BK,aAAcuB,IAEhB,cAAC,EAAD,CACE1B,UAAU,QACVF,SAAUA,EACVjB,KAAK,QACLsB,aAAcuB,gBClGxB3D,GAAQH,IAAOqE,GAAV,4CACAvC,GAELwC,GAAatE,IAAOC,IAAV,ksBAIH6B,EAqBEA,GAmBTyC,GAAavE,IAAOC,IAAV,gDAiFD2E,GA7EA,WACb,IAAM1B,EAAY,SAClB,EAAkCuB,qBAAWb,IAArC1B,EAAR,EAAQA,SAAU4B,EAAlB,EAAkBA,YAKlB,EAA4CW,qBAAWb,IAA/CzB,EAAR,EAAQA,cAAe8B,EAAvB,EAAuBA,iBAMvB,OAAK9B,EA2CH,cAAC,GAAD,CAAOe,UAAWA,EAAlB,SACE,eAAC,GAAD,CAAYb,UAAU,+DAAtB,UACE,cAAC,EAAD,CACEpB,KAAMkB,EAAgB,eAAiB,gBACvCC,UAAU,cACVF,SAAUA,EACVC,cAAeA,EACfI,aAAcuB,EACdtB,kBAAmByB,IAErB,cAAC,GAAD,CACE7B,UAAU,MACVqB,YAAY,kCACZC,kBAAkB,yBAClBC,gBAAgB,kCAChB1C,KAAK,gBAxDT,eAAC,GAAD,CAAOiC,UAAWA,EAAlB,UACE,eAAC,GAAD,CAAYb,UAAU,cAAtB,UACE,cAAC,GAAD,UAAQa,IACR,cAAC,EAAD,CACEjC,KAAMkB,EAAgB,eAAiB,gBACvCC,UAAU,cACVF,SAAUA,EACVC,cAAeA,EACfI,aAAcuB,EACdtB,kBAAmByB,IAErB,mBAAG5B,UAAS,+BAA0BH,QAExC,cAAC,GAAD,CAAYG,UAAU,4BAAtB,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,GAAD,CACED,UAAU,kBACVU,KAAI,WAAM,EAAN,KAAY,EAAZ,KAAkB,OAG1B,sBAAKT,UAAU,6BAAf,UACE,cAAC,EAAD,CACED,UAAU,QACVF,SAAUA,EACVjB,KAAMiB,EAAW,QAAU,OAC3BK,aAAcuB,IAEhB,cAAC,EAAD,CACE1B,UAAU,QACVF,SAAUA,EACVjB,KAAK,QACLsB,aAAcuB,gBCtGxBe,GAAU7E,IAAO8E,GAAV,+6BASAhD,EAOWA,EAIAA,EAGAA,EAGAA,EAGAA,EAWEA,EAGAA,EAGAA,EAGAA,GAQpBiD,GAAQ,CACZ,CAAEC,KAAM,YAAaC,KAAM,KAC3B,CAAED,KAAM,YAAaC,KAAM,cAC3B,CAAED,KAAM,KAAMC,KAAM,OACpB,CAAED,KAAM,SAAUC,KAAM,YAcXC,GAXA,WACb,OACE,cAACL,GAAD,UACGE,GAAMnE,KAAI,SAACuE,EAAMC,GAAP,OACT,cAAC,IAAD,CAAqBC,GAAIF,EAAKF,KAAMK,OAAK,EAACC,gBAAgB,UAA1D,SACE,oBAAIlD,UAAW8C,EAAKH,KAApB,SAA2BG,EAAKH,QADpBI,SC9DhBI,GAASxF,IAAOC,IAAV,mGA8CGwF,GAxCH,WACV,IAAMC,EAAS,CACb,CACET,KAAM,IACNvE,UAAW8D,IAEb,CACES,KAAM,aACNvE,UAAW8D,IAEb,CACES,KAAM,aACNvE,UAAWiF,IAEb,CACEV,KAAM,MACNvE,UAAWkF,IAEb,CACEX,KAAM,UACNvE,UAAWkE,KAIf,OACE,cAACY,GAAD,UACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,cAAC,IAAD,UACGE,EAAO9E,KAAI,WAAsBiF,GAAtB,IAAGZ,EAAH,EAAGA,KAAMvE,EAAT,EAASA,UAAT,OACV,cAAC,IAAD,CAAO4E,OAAK,EAACL,KAAMA,EAAMvE,UAAWA,GAAgBmF,gBCxC5D3F,GAAYF,IAAOC,IAAV,2FAiCAwF,GA3BH,WACV,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,kCAIN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,KAAK,QAAZ,SACE,cAACa,GAAD,MAEF,cAAC,IAAD,CAAOb,KAAK,IAAZ,SACE,cAACc,GAAD,eC5BZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.447ab2bc.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = (props) => {\n  return (\n    <Wrapper>\n      <Title>{props.title}</Title>\n      <Container>\n        <RenderComponent>{props.component}</RenderComponent>\n        <Documentation>\n          <tbody>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </tbody>\n          {props.propDocs.map((doc, i) => {\n            return (\n              <tbody key={i}>\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              </tbody>\n            );\n          })}\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = (props) => {\n  const size = sizeMapping[props.size];\n  const { color } = props;\n\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={size} color={color} />\n        <Dot size={size} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={size} color={color} />\n        <Dot size={size} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\nexport const COLORS = {\n  countdown: \"#316E94\",\n  stopwatch: \"#3FA2E0\",\n  xy: \"#E0BB34\",\n  tabata: \"#4E1394\",\n  purple: \"#7C28E0\",\n  start: \"#26DB5C\",\n  stop: \"#DB4E4E\",\n  reset: \"#2F333B\",\n  text: \"#FAF9F6\",\n  nav: \"#231F20\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLORS } from \"../../utils/helpers\";\n\nconst Btn = styled.button`\n  border-radius: 0.3rem;\n  // padding: 0.5rem;\n  border: none;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${COLORS.text};\n  transition: 0.2s ease;\n  :hover {\n    opacity: 0.6;\n  }\n  background-color: ${(props) =>\n    props.type === \"Start\"\n      ? COLORS.start\n      : props.type === \"Stop\"\n      ? COLORS.stop\n      : COLORS.reset};\n`;\n\nconst Button = (props) => {\n  Button.defaultProps = {\n    btnState: true,\n    settingsState: false,\n    styleName: \"settingsBtn\",\n    type: \"Stopwatch\",\n  };\n  const changeBtnState = () => {\n    props.type === \"Reset\"\n      ? props.sendBtnState(true)\n      : props.sendBtnState(!props.btnState);\n  };\n  const changeSettingsState = () => {\n    props.sendSettingsState(!props.settingsState);\n  };\n  return (\n    <Btn\n      className={props.styleName}\n      type={props.type}\n      onClick={() => {\n        changeBtnState();\n        if (props.styleName === \"settingsBtn\") {\n          changeSettingsState();\n        }\n      }}\n    >\n      {props.type === \"Reset\" ? (\n        <i className=\"bi bi-arrow-counterclockwise\"></i>\n      ) : props.type === \"Start\" ? (\n        <i className=\"bi bi-play-circle\"></i>\n      ) : props.type === \"Stop\" ? (\n        <i className=\"bi bi-pause-circle\"></i>\n      ) : props.styleName === \"settingsBtn\" ? (\n        <i className=\"bi bi-list\"></i>\n      ) : null}\n    </Btn>\n  );\n};\nButton.propTypes = {\n  btnState: PropTypes.bool,\n  settingsState: PropTypes.bool,\n  styleName: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../utils/helpers.js\";\nimport PropTypes from \"prop-types\";\n\nconst Display = styled.label`\n  // border-radius: 0.3rem;\n  // padding: 1rem;\n  margin-bottom: 2rem;\n  font-size: 4.5rem;\n  font-weight: 300;\n  // font-family: \"Orbitron\", sans-serif;\n  color: white;\n  // text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n  //   1px 1px 0 #000;\n  // background-color: ${COLORS.text};\n`;\n\nconst DisplayTime = (props) => {\n  Display.defaultProps = {\n    styleName: \"myClass\",\n    time: \"0\",\n  };\n  const [time] = useState(props.time);\n  return <Display className={props.styleName}>{time}</Display>;\n};\nDisplay.propTypes = {\n  styleName: PropTypes.string,\n  time: PropTypes.string,\n};\n\nexport default DisplayTime;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLORS } from \"../../utils/helpers.js\";\n\nconst Container = styled.div`\n  // border: 1px solid black;\n  width: 20rem;\n  background-color: ${(props) =>\n    props.type === \"Stopwatch\"\n      ? COLORS.stopwatch\n      : props.type === \"Countdown\"\n      ? COLORS.countdown\n      : props.type === \"XY\"\n      ? COLORS.xy\n      : COLORS.tabata};\n  // color: var(--blue);\n  // padding: 2rem 0 2rem 0;\n  // line-height: 30px;\n  font-size: 2rem;\n  border-radius: 0rem 0rem 0.3rem 0.3rem;\n`;\n\nconst Panel = (props) => {\n  Panel.defaultProps = {\n    timerType: \"Stopwatch\",\n  };\n  return (\n    <Container type={props.timerType} className=\"mainPanel\">\n      {props.children}\n    </Container>\n  );\n};\n\nPanel.propTypes = {\n  timerType: PropTypes.string,\n};\n\nexport default Panel;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLORS } from \"../../utils/helpers.js\";\n\nconst SetTime = styled.input`\n  // border: 1px solid black;\n  color: ${(props) =>\n    props.type === \"Stopwatch\"\n      ? COLORS.stopwatch\n      : props.type === \"Countdown\"\n      ? COLORS.countdown\n      : props.type === \"XY\"\n      ? COLORS.xy\n      : COLORS.tabata};\n  font-size: 0.8rem;\n  border-radius: 0.5rem;\n  border: 0px;\n  width: 100%;\n`;\n\nconst Credentials = styled.p`\n  font-size: 0.8rem;\n  color: ${COLORS.text};\n  padding-top: 0.5rem;\n`;\n\nconst Settings = (props) => {\n  Settings.defaultProps = {\n    type: \"Countdown\",\n    timerType: \"Countdown\",\n    placeholder: \"input\",\n    placeholderRounds: \"input\",\n    placeholderRest: \"input\",\n  };\n  return (\n    <div className=\"w-75\">\n      {props.type !== \"Stopwatch\" ? (\n        <SetTime\n          type={props.type}\n          className={props.styleName}\n          placeholder={props.placeholder}\n        ></SetTime>\n      ) : null}\n      {props.type === \"Xy\" || props.type === \"Tabata\" ? (\n        <SetTime\n          type={props.type}\n          className={props.styleName}\n          placeholder={props.placeholderRounds}\n        ></SetTime>\n      ) : null}\n      {props.type === \"Tabata\" ? (\n        <SetTime\n          type={props.type}\n          className={props.styleName}\n          placeholder={props.placeholderRest}\n        ></SetTime>\n      ) : null}\n      <Credentials>By Martin Gundtoft</Credentials>\n    </div>\n  );\n};\n\nSettings.propTypes = {\n  type: PropTypes.string,\n  timerType: PropTypes.string,\n  placeholder: PropTypes.string,\n  placeholderRounds: PropTypes.string,\n  placeholderRest: PropTypes.string,\n};\n\nexport default Settings;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport DisplayTime from \"../components/generic/DisplayTime\";\nimport Panel from \"../components/generic/Panel\";\nimport Settings from \"../components/generic/Settings\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Button\"\n          component={<Button />}\n          propDocs={[\n            {\n              prop: \"btnState\",\n              description: \"Starts and stops the timer\",\n              type: \"boolean\",\n              defaultValue: \"true\",\n            },\n            {\n              prop: \"settingsState\",\n              description: \"Switches between main app and settings\",\n              type: \"boolean\",\n              defaultValue: \"false\",\n            },\n            {\n              prop: \"styleName\",\n              description: \"Has the classNames\",\n              type: \"String\",\n              defaultValue: \"settingsBtn\",\n            },\n            {\n              prop: \"type\",\n              description: \"Has the type of style for the given timer\",\n              type: \"String\",\n              defaultValue: \"Stopwatch\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"DisplayTime\"\n          component={<DisplayTime />}\n          propDocs={[\n            {\n              prop: \"styleName\",\n              description: \"Has the classNames\",\n              type: \"String\",\n              defaultValue: \"myClass\",\n            },\n            {\n              prop: \"time\",\n              description: \"Has the timer value\",\n              type: \"String\",\n              defaultValue: \"0\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Panel\"\n          component={<Panel />}\n          propDocs={[\n            {\n              prop: \"timerType\",\n              description: \"Has the type of timer\",\n              type: \"String\",\n              defaultValue: \"myClass\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Settings\"\n          component={<Settings />}\n          propDocs={[\n            {\n              prop: \"type\",\n              description: \"Has the type of timer\",\n              type: \"String\",\n              defaultValue: \"Countdown\",\n            },\n            {\n              prop: \"timerType\",\n              description: \"Has the type of timer settings\",\n              type: \"String\",\n              defaultValue: \"Countdown\",\n            },\n            {\n              prop: \"placeholder\",\n              description: \"Has the value of the input field for countdown\",\n              type: \"String\",\n              defaultValue: \"input\",\n            },\n            {\n              prop: \"placeholderRounds\",\n              description: \"Has the value of the input field for rounds\",\n              type: \"String\",\n              defaultValue: \"input\",\n            },\n            {\n              prop: \"placeholderRest\",\n              description: \"Has the value of the input field for rest\",\n              type: \"String\",\n              defaultValue: \"input\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import React, { createContext, useState } from \"react\";\n\nexport const TimerContext = createContext({\n  setBtnState: () => {\n    console.log(\"setBtnState: Im outside the Timerprovider\");\n  },\n  setSettingsState: () => {\n    console.log(\"setSettingsState: Im outside the Timerprovider\");\n  },\n});\n\nconst TimerProvider = ({ children }) => {\n  const [btnState, setBtnState] = useState(true);\n  const [settingsState, setSettingsState] = useState(false);\n\n  return (\n    <TimerContext.Provider\n      value={{ btnState, setBtnState, settingsState, setSettingsState }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nexport default TimerProvider;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport Panel from \"../generic/Panel\";\nimport Settings from \"../generic/Settings\";\nimport Button from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport { COLORS } from \"../../utils/helpers\";\n\nconst Title = styled.h1`\n  color: ${COLORS.text};\n`;\nconst UpperPanel = styled.div`\n  position: relative;\n  height: 15rem;\n  .false {\n    color: ${COLORS.stop};\n    animation: pulse 1.2s ease infinite, color 0.3s ease;\n  }\n\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n\n  @keyframes color {\n    0% {\n      color: black;\n    }\n    100% {\n      color: ${COLORS.stop};\n    }\n  }\n\n  i.stopwatch {\n    font-size: 10rem;\n    opacity: 40%;\n    display: block;\n  }\n  .settingsBtn {\n    z-index: 1;\n    font-size: 1.5rem;\n    // display: block;\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    background-color: transparent;\n  }\n`;\nconst LowerPanel = styled.div`\n  height: 15rem;\n`;\n\nconst Stopwatch = () => {\n  const timerType = \"Stopwatch\";\n  const { btnState, setBtnState } = useContext(TimerContext);\n  const { settingsState, setSettingsState } = useContext(TimerContext);\n\n  if (!settingsState) {\n    return (\n      <Panel timerType={timerType}>\n        <UpperPanel className=\"text-center\">\n          <Title>{timerType}</Title>\n          <Button\n            type={settingsState ? \"exitSettings\" : \"enterSettings\"}\n            styleName=\"settingsBtn\"\n            btnState={btnState}\n            settingsState={settingsState}\n            sendBtnState={setBtnState}\n            sendSettingsState={setSettingsState}\n          ></Button>\n          <i className={`bi bi-stopwatch stopwatch ${btnState}`}></i>\n        </UpperPanel>\n        <LowerPanel className=\"d-flex align-items-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <DisplayTime\n                styleName=\"col text-center\"\n                time={`0${0}:0${0}:0${0}`}\n              />\n            </div>\n            <div className=\"row justify-content-around\">\n              <Button\n                styleName=\"col-5\"\n                btnState={btnState}\n                type={btnState ? \"Start\" : \"Stop\"}\n                sendBtnState={setBtnState}\n              ></Button>\n              <Button\n                styleName=\"col-5\"\n                btnState={btnState}\n                type=\"Reset\"\n                sendBtnState={setBtnState}\n              ></Button>\n            </div>\n          </div>\n        </LowerPanel>\n      </Panel>\n    );\n  }\n  return (\n    <Panel timerType={timerType}>\n      <UpperPanel className=\"text-center d-flex align-items-center justify-content-center\">\n        <Button\n          type={settingsState ? \"exitSettings\" : \"enterSettings\"}\n          styleName=\"settingsBtn\"\n          btnState={btnState}\n          settingsState={settingsState}\n          sendBtnState={setBtnState}\n          sendSettingsState={setSettingsState}\n        ></Button>\n        <Settings styleName=\"p-2\" type=\"Stopwatch\"></Settings>\n      </UpperPanel>\n    </Panel>\n  );\n};\nexport default Stopwatch;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport Panel from \"../generic/Panel\";\nimport Settings from \"../generic/Settings\";\nimport Button from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport { COLORS } from \"../../utils/helpers\";\n\nconst Title = styled.h1`\n  color: ${COLORS.text};\n`;\nconst UpperPanel = styled.div`\n  position: relative;\n  height: 15rem;\n  .false {\n    color: ${COLORS.stop};\n    animation: pulse 1.2s ease infinite, color 0.3s ease;\n  }\n\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n\n  @keyframes color {\n    0% {\n      color: black;\n    }\n    100% {\n      color: ${COLORS.stop};\n    }\n  }\n\n  i.icon {\n    font-size: 10rem;\n    opacity: 40%;\n    display: block;\n  }\n  .settingsBtn {\n    z-index: 1;\n    font-size: 1.5rem;\n    // display: block;\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    background-color: transparent;\n  }\n`;\nconst LowerPanel = styled.div`\n  height: 15rem;\n`;\n\nconst CountDown = () => {\n  const timerType = \"Countdown\";\n  const { btnState, setBtnState } = useContext(TimerContext);\n  // const [btnState, setBtnState] = useState(true);\n  // const sendBtnState = (btnState) => {\n  //   console.log(\"btnState\" + btnState);\n  //   setBtnState(btnState);\n  // };\n  const { settingsState, setSettingsState } = useContext(TimerContext);\n\n  // const [settingsState, setSettingsState] = useState(false);\n  // const sendSettingsState = (settingsState) => {\n  //   console.log(\"settingsState\" + settingsState);\n  //   setSettingsState(settingsState);\n  // };\n\n  if (!settingsState) {\n    return (\n      <Panel timerType={timerType}>\n        <UpperPanel className=\"text-center\">\n          <Title>{timerType}</Title>\n          <Button\n            type={settingsState ? \"exitSettings\" : \"enterSettings\"}\n            styleName=\"settingsBtn\"\n            btnState={btnState}\n            settingsState={settingsState}\n            sendBtnState={setBtnState}\n            sendSettingsState={setSettingsState}\n          ></Button>\n          <i className={`bi bi-stopwatch icon ${btnState}`}></i>\n        </UpperPanel>\n        <LowerPanel className=\"d-flex align-items-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <DisplayTime\n                styleName=\"col text-center\"\n                time={`0${0}:0${0}:0${0}`}\n              />\n            </div>\n            <div className=\"row justify-content-around\">\n              <Button\n                styleName=\"col-5\"\n                btnState={btnState}\n                type={btnState ? \"Start\" : \"Stop\"}\n                sendBtnState={setBtnState}\n              ></Button>\n              <Button\n                styleName=\"col-5\"\n                btnState={btnState}\n                type=\"Reset\"\n                sendBtnState={setBtnState}\n              ></Button>\n            </div>\n          </div>\n        </LowerPanel>\n      </Panel>\n    );\n  }\n  return (\n    <Panel timerType={timerType}>\n      <UpperPanel className=\"text-center d-flex align-items-center justify-content-center\">\n        <Button\n          type={settingsState ? \"exitSettings\" : \"enterSettings\"}\n          styleName=\"settingsBtn\"\n          btnState={btnState}\n          settingsState={settingsState}\n          sendBtnState={setBtnState}\n          sendSettingsState={setSettingsState}\n        ></Button>\n        <Settings\n          styleName=\"p-2\"\n          placeholder=\"Enter countdown time in seconds\"\n          type=\"Countdown\"\n        ></Settings>\n      </UpperPanel>\n    </Panel>\n  );\n};\nexport default CountDown;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport Panel from \"../generic/Panel\";\nimport Settings from \"../generic/Settings\";\nimport Button from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport { COLORS } from \"../../utils/helpers\";\n\nconst Title = styled.h1`\n  color: ${COLORS.text};\n`;\nconst UpperPanel = styled.div`\n  position: relative;\n  height: 15rem;\n  .false {\n    color: ${COLORS.stop};\n    animation: pulse 1.2s ease infinite, color 0.3s ease;\n  }\n\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n\n  @keyframes color {\n    0% {\n      color: black;\n    }\n    100% {\n      color: ${COLORS.stop};\n    }\n  }\n\n  i.icon {\n    font-size: 10rem;\n    opacity: 40%;\n    display: block;\n  }\n  .settingsBtn {\n    z-index: 1;\n    font-size: 1.5rem;\n    // display: block;\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    background-color: transparent;\n  }\n`;\nconst LowerPanel = styled.div`\n  height: 15rem;\n`;\n\nconst Xy = () => {\n  const timerType = \"XY\";\n  const { btnState, setBtnState } = useContext(TimerContext);\n  // const sendBtnState = (btnState) => {\n  //   console.log(\"btnState\" + btnState);\n  //   setBtnState(btnState);\n  // };\n  const { settingsState, setSettingsState } = useContext(TimerContext);\n  // const sendSettingsState = (settingsState) => {\n  //   console.log(\"settingsState\" + settingsState);\n  //   setSettingsState(settingsState);\n  // };\n\n  if (!settingsState) {\n    return (\n      <Panel timerType={timerType}>\n        <UpperPanel className=\"text-center\">\n          <Title>{timerType}</Title>\n          <Button\n            type={settingsState ? \"exitSettings\" : \"enterSettings\"}\n            styleName=\"settingsBtn\"\n            btnState={btnState}\n            settingsState={settingsState}\n            sendBtnState={setBtnState}\n            sendSettingsState={setSettingsState}\n          ></Button>\n          <i className={`bi bi-stopwatch icon ${btnState}`}></i>\n        </UpperPanel>\n        <LowerPanel className=\"d-flex align-items-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <DisplayTime\n                styleName=\"col text-center\"\n                time={`0${0}:0${0}:0${0}`}\n              />\n            </div>\n            <div className=\"row justify-content-around\">\n              <Button\n                styleName=\"col-5\"\n                btnState={btnState}\n                type={btnState ? \"Start\" : \"Stop\"}\n                sendBtnState={setBtnState}\n              ></Button>\n              <Button\n                styleName=\"col-5\"\n                btnState={btnState}\n                type=\"Reset\"\n                sendBtnState={setBtnState}\n              ></Button>\n            </div>\n          </div>\n        </LowerPanel>\n      </Panel>\n    );\n  }\n  return (\n    <Panel timerType={timerType}>\n      <UpperPanel className=\"text-center d-flex align-items-center justify-content-center\">\n        <Button\n          type={settingsState ? \"exitSettings\" : \"enterSettings\"}\n          styleName=\"settingsBtn\"\n          btnState={btnState}\n          settingsState={settingsState}\n          sendBtnState={setBtnState}\n          sendSettingsState={setSettingsState}\n        ></Button>\n        <Settings\n          styleName=\"p-2\"\n          placeholder=\"Enter time per round in seconds\"\n          placeholderRounds=\"Enter number of rounds\"\n          type=\"Xy\"\n        ></Settings>\n      </UpperPanel>\n    </Panel>\n  );\n};\nexport default Xy;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport Panel from \"../generic/Panel\";\nimport Settings from \"../generic/Settings\";\nimport Button from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport { COLORS } from \"../../utils/helpers\";\n\nconst Title = styled.h1`\n  color: ${COLORS.text};\n`;\nconst UpperPanel = styled.div`\n  position: relative;\n  height: 15rem;\n  .false {\n    color: ${COLORS.stop};\n    animation: pulse 1.2s ease infinite, color 0.3s ease;\n  }\n\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n\n  @keyframes color {\n    0% {\n      color: black;\n    }\n    100% {\n      color: ${COLORS.stop};\n    }\n  }\n\n  i.icon {\n    font-size: 10rem;\n    opacity: 40%;\n    display: block;\n  }\n  .settingsBtn {\n    z-index: 1;\n    font-size: 1.5rem;\n    // display: block;\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    background-color: transparent;\n  }\n`;\nconst LowerPanel = styled.div`\n  height: 15rem;\n`;\n\nconst Tabata = () => {\n  const timerType = \"Tabata\";\n  const { btnState, setBtnState } = useContext(TimerContext);\n  // const sendBtnState = (btnState) => {\n  //   console.log(\"btnState\" + btnState);\n  //   setBtnState(btnState);\n  // };\n  const { settingsState, setSettingsState } = useContext(TimerContext);\n  // const sendSettingsState = (settingsState) => {\n  //   console.log(\"settingsState\" + settingsState);\n  //   setSettingsState(settingsState);\n  // };\n\n  if (!settingsState) {\n    return (\n      <Panel timerType={timerType}>\n        <UpperPanel className=\"text-center\">\n          <Title>{timerType}</Title>\n          <Button\n            type={settingsState ? \"exitSettings\" : \"enterSettings\"}\n            styleName=\"settingsBtn\"\n            btnState={btnState}\n            settingsState={settingsState}\n            sendBtnState={setBtnState}\n            sendSettingsState={setSettingsState}\n          ></Button>\n          <i className={`bi bi-stopwatch icon ${btnState}`}></i>\n        </UpperPanel>\n        <LowerPanel className=\"d-flex align-items-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <DisplayTime\n                styleName=\"col text-center\"\n                time={`0${0}:0${0}:0${0}`}\n              />\n            </div>\n            <div className=\"row justify-content-around\">\n              <Button\n                styleName=\"col-5\"\n                btnState={btnState}\n                type={btnState ? \"Start\" : \"Stop\"}\n                sendBtnState={setBtnState}\n              ></Button>\n              <Button\n                styleName=\"col-5\"\n                btnState={btnState}\n                type=\"Reset\"\n                sendBtnState={setBtnState}\n              ></Button>\n            </div>\n          </div>\n        </LowerPanel>\n      </Panel>\n    );\n  }\n  return (\n    <Panel timerType={timerType}>\n      <UpperPanel className=\"text-center d-flex align-items-center justify-content-center\">\n        <Button\n          type={settingsState ? \"exitSettings\" : \"enterSettings\"}\n          styleName=\"settingsBtn\"\n          btnState={btnState}\n          settingsState={settingsState}\n          sendBtnState={setBtnState}\n          sendSettingsState={setSettingsState}\n        ></Button>\n        <Settings\n          styleName=\"p-2\"\n          placeholder=\"Enter time per round in seconds\"\n          placeholderRounds=\"Enter number of rounds\"\n          placeholderRest=\"Enter rest per round in seconds\"\n          type=\"Tabata\"\n        ></Settings>\n      </UpperPanel>\n    </Panel>\n  );\n};\nexport default Tabata;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { COLORS } from \"../../utils/helpers\";\nimport styled from \"styled-components\";\n\nconst NavList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0.5rem 0;\n  overflow: hidden;\n  border-radius: 0.3rem 0.3rem 0rem 0rem;\n  width: 20rem;\n\n  a {\n    color: ${COLORS.text};\n    text-decoration: none;\n  }\n  .Stopwatch,\n  .Countdown,\n  .XY,\n  .Tabata {\n    background-color: ${COLORS.nav};\n    transition: 0.5s;\n  }\n  .Stopwatch:hover {\n    background-color: ${COLORS.stopwatch};\n  }\n  .Countdown:hover {\n    background-color: ${COLORS.countdown};\n  }\n  .Tabata:hover {\n    background-color: ${COLORS.tabata};\n  }\n  .XY:hover {\n    background-color: ${COLORS.xy};\n  }\n\n  li {\n    display: inline;\n    list-style-type: none;\n    text-decoration: none;\n    padding: 0.75rem;\n  }\n  .current {\n    .Stopwatch {\n      background-color: ${COLORS.stopwatch};\n    }\n    .Countdown {\n      background-color: ${COLORS.countdown};\n    }\n    .XY {\n      background-color: ${COLORS.xy};\n    }\n    .Tabata {\n      background-color: ${COLORS.tabata};\n    }\n  }\n  .active {\n    background-color: #04aa6d;\n  }\n`;\n\nconst links = [\n  { name: \"Stopwatch\", path: \"/\" },\n  { name: \"Countdown\", path: \"/Countdown\" },\n  { name: \"XY\", path: \"/XY\" },\n  { name: \"Tabata\", path: \"/Tabata\" },\n];\n\nconst Navbar = () => {\n  return (\n    <NavList>\n      {links.map((link, index) => (\n        <NavLink key={index} to={link.path} exact activeClassName=\"current\">\n          <li className={link.name}>{link.name}</li>\n        </NavLink>\n      ))}\n    </NavList>\n  );\n};\nexport default Navbar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\nimport TimerProvider from \"../TimerProvider\";\nimport Navbar from \"../components/generic/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst App = () => {\n  const routes = [\n    {\n      path: \"/\",\n      component: Stopwatch,\n    },\n    {\n      path: \"/Stopwatch\",\n      component: Stopwatch,\n    },\n    {\n      path: \"/Countdown\",\n      component: Countdown,\n    },\n    {\n      path: \"/XY\",\n      component: XY,\n    },\n    {\n      path: \"/Tabata\",\n      component: Tabata,\n    },\n  ];\n\n  return (\n    <Timers>\n      <TimerProvider>\n        <Router>\n          <Navbar />\n          <Switch>\n            {routes.map(({ path, component }, key) => (\n              <Route exact path={path} component={component} key={key} />\n            ))}\n          </Switch>\n        </Router>\n      </TimerProvider>\n    </Timers>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n// import AppProvider from \"./AppProvider\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Timers</Link>\n            </li>\n            <li>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimersView />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}