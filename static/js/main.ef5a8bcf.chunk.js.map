{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","utils/helpers.js","components/generic/Button.js","TimerProvider.js","components/generic/DisplayTime.js","components/generic/Panel.js","components/generic/Settings.js","views/DocumentationView.js","components/generic/Timer.js","utils/hooks.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","components/generic/Navbar.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","props","title","component","propDocs","map","doc","i","prop","description","type","defaultValue","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","COLORS","BUTTONS","reset","start","stop","settings","timerValue","value","fullTime","Date","toISOString","substr","Btn","button","Button","styleName","onClick","className","TimerContext","createContext","setBtnState","console","log","setSettingsState","TimerProvider","children","useState","btnState","settingsState","stopwatchTimer","setStopwatchTimer","stopwatchSettings","setStopwatchSettings","countdownTimer","setCountdownTimer","countdownSettings","setCountdownSettings","xyTimer","setXyTimer","xySettings","setXySettings","tabataTimer","setTabataTimer","tabataSettings","setTabataSettings","time","setTime","rounds","setRounds","rest","setRest","isRunning","setIsRunning","savedTime","setSavedTime","Provider","Display","label","propTypes","PropTypes","string","DisplayTime","useContext","Panel","timerType","SetInput","input","Credentials","p","Text","Settings","placeholder","placeholderRounds","placeholderRest","handleChange","e","target","name","htmlFor","min","max","step","onChange","h1","UpperPanel","LowerPanel","SettingsPanel","Timer","timer","useRef","setTimer","setSettings","current","handleClick","currentTarget","delay","callback","savedCallback","useEffect","id","setInterval","clearInterval","useInterval","Number","useTimerStarter","Stopwatch","CountDown","XY","Tabata","NavList","ul","links","path","Navbar","link","index","to","exact","activeClassName","Timers","App","routes","Countdown","key","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGMA,EAAUC,IAAOC,IAAV,+EAKPC,EAAYF,IAAOC,IAAV,mGAMTE,EAAQH,IAAOC,IAAV,sHAOLG,EAAkBJ,IAAOC,IAAV,wFAMfI,EAAgBL,IAAOM,MAAV,0BAqCJC,EAnCW,SAACC,GACzB,OACE,eAACT,EAAD,WACE,cAACI,EAAD,UAAQK,EAAMC,QACd,eAACP,EAAD,WACE,cAACE,EAAD,UAAkBI,EAAME,YACxB,eAAC,EAAD,WACE,gCACE,+BACE,sCACA,6CACA,sCACA,oDAGHF,EAAMG,SAASC,KAAI,SAACC,EAAKC,GACxB,OACE,gCACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,cACT,6BAAKH,EAAII,OACT,6BACE,+BAAOJ,EAAIK,qBANLJ,gBCxCpBK,EAAc,CAClBC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAGHpB,EAAYF,IAAOC,IAAV,wXAqBTsB,EAAMvB,IAAOwB,KAAV,qXAEE,SAAChB,GAAD,OAAWA,EAAMiB,QAChB,SAACjB,GAAD,OAAWA,EAAMiB,QACP,SAACjB,GAAD,OAAWA,EAAMkB,SAiBjCC,EAAW3B,IAAOC,IAAV,8CAIR2B,EAAU,SAACpB,GACf,IAAMiB,EAAON,EAAYX,EAAMiB,MACvBC,EAAUlB,EAAVkB,MAER,OACE,eAAC,EAAD,WACE,eAACC,EAAD,WACE,cAACJ,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,IACxB,cAACH,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,OAE1B,eAACC,EAAD,WACE,cAACJ,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,IACxB,cAACH,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,WAWhCE,EAAQC,aAAe,CACrBJ,KAAM,SACNC,MA/EmB,WAkFNE,I,IAAAA,ICnFFE,EACA,UADAA,EAEA,UAFAA,EAGP,UAHOA,EAIH,UAJGA,EAMJ,UANIA,EAOL,UAPKA,EAQJ,UARIA,EASL,UATKA,EAUN,UAGMC,EAAU,CACrBC,MAAO,+BACPC,MAAO,oBACPC,KAAM,qBACNC,SAAU,cAGCC,EAAa,SAACC,GACzB,IAAMC,EAAW,IAAIC,KAAa,IAARF,GAAcG,cAIxC,OAHcF,EAASG,OAAO,GAAI,GAGnB,KAFCH,EAASG,OAAO,GAAI,GAEJ,KADhBH,EAASG,OAAO,GAAI,GACa,KCvB7CC,EAAM1C,IAAO2C,OAAV,gPAMEb,GAKW,SAACtB,GAAD,MACF,UAAhBA,EAAM6B,MACFP,EACgB,SAAhBtB,EAAM6B,MACNP,EACAA,KA0BOc,EAvBA,SAATA,EAAUpC,GACdoC,EAAOf,aAAe,CACpBgB,UAAW,GACXR,MAAO,GACPS,QAAS,MAEX,IAAQT,EAAU7B,EAAV6B,MACR,OACE,cAACK,EAAD,CACEK,UAAWvC,EAAMqC,UACjBR,MAAO7B,EAAM6B,MACbS,QAAStC,EAAMsC,QAHjB,SAKE,mBAAGC,UAAWhB,EAAQM,Q,OCnCfW,EAAeC,wBAAc,CACxCC,YAAa,WACXC,QAAQC,IAAI,8CAEdC,iBAAkB,WAChBF,QAAQC,IAAI,qDA6DDE,EAzDO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBP,EAAjB,KACA,EAA0CM,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBL,EAAtB,KACA,EAA4CG,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAkDJ,oBAAS,GAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAAkDR,oBAAS,GAA3D,mBAAOS,EAAP,KAA0BC,EAA1B,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAsCd,oBAAS,GAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KACA,EAA4ChB,oBAAS,GAArD,mBAAOiB,EAAP,KAAuBC,EAAvB,KACA,EAAwBlB,mBAAS,GAAjC,mBAAOmB,EAAP,KAAaC,EAAb,KACA,EAA4BpB,mBAAS,GAArC,mBAAOqB,EAAP,KAAeC,EAAf,KACA,GAAwBtB,mBAAS,GAAjC,qBAAOuB,GAAP,MAAaC,GAAb,MACA,GAAkCxB,oBAAS,GAA3C,qBAAOyB,GAAP,MAAkBC,GAAlB,MACA,GAAkC1B,mBAAS,GAA3C,qBAAO2B,GAAP,MAAkBC,GAAlB,MAEA,OACE,cAACpC,EAAaqC,SAAd,CACEhD,MAAO,CACL8C,aACAC,gBACAH,aACAC,gBACAP,OACAC,UACAC,SACAC,YACAC,QACAC,WACAvB,WACAP,cACAQ,gBACAL,mBACAM,iBACAC,oBACAC,oBACAC,uBACAC,iBACAC,oBACAC,oBACAC,uBACAC,UACAC,aACAC,aACAC,gBACAC,cACAC,iBACAC,iBACAC,qBA/BJ,SAkCGnB,K,iBCzDD+B,EAAUtF,IAAOuF,MAAV,yJAebD,EAAQE,UAAY,CAClB3C,UAAW4C,IAAUC,QAGRC,I,sCAAAA,GAXK,SAACnF,GACnB8E,EAAQzD,aAAe,CACrBgB,UAAW,WAEb,IAAQ8B,EAASiB,qBAAW5C,GAApB2B,KACR,OAAO,cAACW,EAAD,CAASvC,UAAWvC,EAAMqC,UAA1B,SAAsCT,EAAWuC,MCdpDzE,GAAYF,IAAOC,IAAV,sPAGO,SAACO,GAAD,MACH,cAAfA,EAAMS,KACFa,EACe,cAAftB,EAAMS,KACNa,EACe,OAAftB,EAAMS,KACNa,EACAA,KAuBO+D,GAfD,SAARA,EAASrF,GAIb,OAHAqF,EAAMhE,aAAe,CACnBiE,UAAW,aAGX,cAAC,GAAD,CAAW7E,KAAMT,EAAMsF,UAAW/C,UAAU,YAA5C,SACGvC,EAAM+C,YCtBPwC,GAAW/F,IAAOgG,MAAV,4IAEH,SAACxF,GAAD,MACQ,cAAfA,EAAMS,KACFa,EACe,cAAftB,EAAMS,KACNa,EACe,OAAftB,EAAMS,KACNa,EACAA,KAMFmE,GAAcjG,IAAOkG,EAAV,0FAENpE,GAILqE,GAAOnG,IAAOkG,EAAV,0IAECpE,GAiGIsE,GA3FE,SAAXA,EAAY5F,GAChB4F,EAASvE,aAAe,CAEtBiE,UAAW,YACXO,YAAa,WACbC,kBAAmB,WACnBC,gBAAiB,YAGnB,MAA0BX,qBAAW5C,GAA7B2B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAA8BgB,qBAAW5C,GAAjC6B,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAChB,EAA0Bc,qBAAW5C,GAA7B+B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAERwB,EAAe,SAACC,GACE,UAAlBA,EAAEC,OAAOC,KAAkB/B,EAAQ6B,EAAEC,OAAOrE,OACrB,WAAlBoE,EAAEC,OAAOC,KAAmB7B,EAAU2B,EAAEC,OAAOrE,OACnD2C,EAAQyB,EAAEC,OAAOrE,QAGxB,OACE,sBAAKU,UAAU,OAAf,UACuB,cAApBvC,EAAMsF,UACL,qCACE,eAACK,GAAD,WACE,uBAAOS,QAAQ,QAAf,8BACA,uBACCxE,EAAWuC,MAEd,cAACoB,GAAD,CACEY,KAAK,QACL1F,KAAK,QACLoF,YAAa7F,EAAM6F,YACnBQ,IAAI,IACJC,IAAI,OACJC,KAAK,KACL1E,MAAOsC,EACPqC,SAAUR,OAGZ,KACiB,OAApBhG,EAAMsF,WAA0C,WAApBtF,EAAMsF,UACjC,qCACE,eAACK,GAAD,WACE,uBAAOS,QAAQ,SAAf,kCACA,uBACC/B,KAEH,cAACkB,GAAD,CACEY,KAAK,SACL1F,KAAK,QACLoF,YAAa7F,EAAM8F,kBACnBO,IAAI,IACJC,IAAI,IACJC,KAAK,IACL1E,MAAOwC,EACPmC,SAAUR,OAGZ,KACiB,WAApBhG,EAAMsF,UACL,qCACE,eAACK,GAAD,WACE,uBAAOS,QAAQ,OAAf,2BACA,uBACCxE,EAAW2C,GAAMtC,OAAO,EAAG,MAE9B,cAACsD,GAAD,CACEY,KAAK,OACL1F,KAAK,QACLoF,YAAa7F,EAAM+F,gBACnBM,IAAI,IACJC,IAAI,MACJC,KAAK,KACL1E,MAAO0C,EACPiC,SAAUR,OAGZ,KACJ,cAACP,GAAD,qCCvGA/F,GAAYF,IAAOC,IAAV,4FAMTE,GAAQH,IAAOC,IAAV,kDA0HII,GAtHO,WACpB,OACE,cAAC,GAAD,UACE,gCACE,cAAC,GAAD,4BACA,cAAC,EAAD,CACEI,MAAM,mBACNC,UAAW,cAAC,EAAD,IACXC,SAAU,CACR,CACEI,KAAM,OACNC,YAAa,0CACbC,KAAM,SACNC,aAAc,aAIpB,cAAC,EAAD,CACET,MAAM,SACNC,UAAW,cAAC,EAAD,IACXC,SAAU,CACR,CACEI,KAAM,WACNC,YAAa,6BACbC,KAAM,UACNC,aAAc,QAEhB,CACEH,KAAM,gBACNC,YAAa,yCACbC,KAAM,UACNC,aAAc,SAEhB,CACEH,KAAM,YACNC,YAAa,qBACbC,KAAM,SACNC,aAAc,eAEhB,CACEH,KAAM,OACNC,YAAa,4CACbC,KAAM,SACNC,aAAc,gBAIpB,cAAC,EAAD,CACET,MAAM,cACNC,UAAW,cAAC,GAAD,IACXC,SAAU,CACR,CACEI,KAAM,YACNC,YAAa,qBACbC,KAAM,SACNC,aAAc,WAEhB,CACEH,KAAM,OACNC,YAAa,sBACbC,KAAM,SACNC,aAAc,QAIpB,cAAC,EAAD,CACET,MAAM,QACNC,UAAW,cAAC,GAAD,IACXC,SAAU,CACR,CACEI,KAAM,YACNC,YAAa,wBACbC,KAAM,SACNC,aAAc,cAIpB,cAAC,EAAD,CACET,MAAM,WACNC,UAAW,cAAC,GAAD,IACXC,SAAU,CACR,CACEI,KAAM,OACNC,YAAa,wBACbC,KAAM,SACNC,aAAc,aAEhB,CACEH,KAAM,YACNC,YAAa,iCACbC,KAAM,SACNC,aAAc,aAEhB,CACEH,KAAM,cACNC,YAAa,iDACbC,KAAM,SACNC,aAAc,SAEhB,CACEH,KAAM,oBACNC,YAAa,8CACbC,KAAM,SACNC,aAAc,SAEhB,CACEH,KAAM,kBACNC,YAAa,4CACbC,KAAM,SACNC,aAAc,kBCxHtBf,GAAQH,IAAOiH,GAAV,4CACAnF,GAELoF,GAAalH,IAAOC,IAAV,usBAIH6B,EAqBEA,GAmBTqF,GAAanH,IAAOC,IAAV,gDAIVmH,GAAgBpH,IAAOC,IAAV,0OAgKJoH,GAnJD,SAAC7G,GACb,MAA0BoF,qBAAW5C,GAA7B2B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAA8CgB,qBAAW5C,GAAjDW,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBACxB,EAAoDgC,qBAAW5C,GAAvDa,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,qBAC3B,EAA8C8B,qBAAW5C,GAAjDe,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBACxB,EAAoD4B,qBAAW5C,GAAvDiB,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,qBAC3B,EAAwC0B,qBAAW5C,GAA3CuB,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eACrB,EAA8CoB,qBAAW5C,GAAjDyB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBACxB,EAAgCkB,qBAAW5C,GAAnCmB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WACjB,EAAsCwB,qBAAW5C,GAAzCqB,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cACpB,EAAoCsB,qBAAW5C,GAAvCiC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACnB,EAAkCU,qBAAW5C,GAArCS,EAAR,EAAQA,SAAUP,EAAlB,EAAkBA,YAClB,EAA4C0C,qBAAW5C,GAA/CU,EAAR,EAAQA,cAAeL,EAAvB,EAAuBA,iBACvB,EAAoCuC,qBAAW5C,GAAvCmC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAUbkC,EAAQC,mBACRC,EAAWD,mBACXpF,EAAWoF,mBACXE,EAAcF,mBAEpB,OAAQ/G,EAAMsF,WACZ,IAAK,YACHwB,EAAMI,QAAU/D,EAChB6D,EAASE,QAAU9D,EACnBzB,EAASuF,QAAU7D,EACnB4D,EAAYC,QAAU5D,EACtB,MAEF,IAAK,YACHwD,EAAMI,QAAU3D,EAChByD,EAASE,QAAU1D,EACnB7B,EAASuF,QAAUzD,EACnBwD,EAAYC,QAAUxD,EACtB,MAEF,IAAK,KACHoD,EAAMI,QAAUvD,EAChBqD,EAASE,QAAUtD,EACnBjC,EAASuF,QAAUrD,EACnBoD,EAAYC,QAAUpD,EACtB,MAEF,IAAK,SACHgD,EAAMI,QAAUnD,EAChBiD,EAASE,QAAUlD,EACnBrC,EAASuF,QAAUjD,EACnBgD,EAAYC,QAAUhD,EACtB,MAEF,QACEvB,QAAQC,IAAI,qBAIhB,IAAMuE,EAAc,SAAClB,GACK,cAApBjG,EAAMsF,WACRV,EAAa,GAEe,UAA1BqB,EAAEmB,cAAcvF,QAClBuC,EAAQO,GACRD,GAAa,IAGe,UAA1BuB,EAAEmB,cAAcvF,OAA+C,SAA1BoE,EAAEmB,cAAcvF,QACvD6C,GAAcD,GACd/B,GAAaO,IAEe,aAA1BgD,EAAEmB,cAAcvF,QAClBgB,GAAkBK,GAClB0B,EAAaT,KAKjB,OCzJ6B,SAACmB,GAC9B,MAAgBtC,mBAAS,KAAlBqE,EAAP,oBACQ5C,EAAcW,qBAAW5C,GAAzBiC,UACR,EAA0BW,qBAAW5C,GAA7B2B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAqBd,SAAqBkD,EAAUD,GAC7B,IAAME,EAAgBR,mBAGtBS,qBAAU,WACRD,EAAcL,QAAUI,IACvB,CAACA,IAGJE,qBAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAII,EAAKC,aAJX,WACEH,EAAcL,YAGaG,GAC3B,OAAO,kBAAMM,cAAcF,OAE5B,CAACJ,IApCNO,EACE,WAEIxD,EADgB,cAAdkB,EACMuC,OAAO1D,GAAQ,EAEf0D,OAAO1D,GAAQ,KAG3BM,EAAY4C,EAAQ,MD0ItBS,CAAgB9H,EAAMsF,WAEjBpC,GAAqC,cAApBlD,EAAMsF,UAgD1B,cAAC,GAAD,CAAOA,UAAWtF,EAAMsF,UAAxB,SACE,eAACsB,GAAD,CAAerE,UAAU,6EAAzB,UACE,cAAC,EAAD,CACE9B,KAAK,cACL4B,UAAU,cACVY,SAAU6D,EAAMI,QAChBhE,cAAevB,EAASuF,QACxBxE,YAAasE,EAASE,QACtBrE,iBAAkBoE,EAAYC,QAC9B5E,QAAS6E,EACTtF,MAAM,aAER,cAAC,GAAD,CAAUQ,UAAU,MAAMiD,UAAWtF,EAAMsF,iBA1D7C,eAAC,GAAD,CAAOA,UAAWtF,EAAMsF,UAAxB,UACE,eAACoB,GAAD,CAAYnE,UAAU,cAAtB,UACE,cAAC,GAAD,UAAQvC,EAAMsF,YACO,cAApBtF,EAAMsF,UACL,cAAC,EAAD,CACEjD,UAAU,cACVY,SAAU6D,EAAMI,QAChBhE,cAAevB,EAASuF,QACxBxE,YAAasE,EAASE,QACtBrE,iBAAkBoE,EAAYC,QAC9B5E,QAAS6E,EACTtF,MAAM,aAEN,KACJ,mBAAGU,UAAS,qCAAgCkC,QAE9C,cAACkC,GAAD,CAAYpE,UAAU,4BAAtB,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,GAAD,CACEF,UAAU,sBAId,sBAAKE,UAAU,6BAAf,UACE,cAAC,EAAD,CACEF,UAAU,QACVY,SAAU6D,EAAMI,QAChBrF,MAAOoB,EAAW,QAAU,OAC5BP,YAAasE,EAASE,QACtB5E,QAAS6E,IAEX,cAAC,EAAD,CACE9E,UAAU,QACVY,SAAU6D,EAAMI,QAChBrF,MAAM,QACNa,YAAasE,EAASE,QACtB5E,QAAS6E,gBE3LVY,GALG,WAGhB,OAAO,cAAC,GAAD,CAAOzC,UAFI,eCIL0C,GALG,WAGhB,OAAO,cAAC,GAAD,CAAO1C,UAFI,eCIL2C,GALJ,WAGT,OAAO,cAAC,GAAD,CAAO3C,UAFI,QCIL4C,GALA,WAGb,OAAO,cAAC,GAAD,CAAO5C,UAFI,YCEd6C,GAAU3I,IAAO4I,GAAV,+6BASA9G,EAOWA,EAIAA,EAGAA,EAGAA,EAGAA,EAWEA,EAGAA,EAGAA,EAGAA,GAQpB+G,GAAQ,CACZ,CAAElC,KAAM,YAAamC,KAAM,KAC3B,CAAEnC,KAAM,YAAamC,KAAM,cAC3B,CAAEnC,KAAM,KAAMmC,KAAM,OACpB,CAAEnC,KAAM,SAAUmC,KAAM,YA4BXC,GAzBA,WACb,IAAQnE,EAAYgB,qBAAW5C,GAAvB4B,QACAM,EAAiBU,qBAAW5C,GAA5BkC,aACAhC,EAAgB0C,qBAAW5C,GAA3BE,YACAG,EAAqBuC,qBAAW5C,GAAhCK,iBAEFsE,EAAc,WAClB/C,EAAQ,GACRM,GAAa,GACbhC,GAAY,GACZG,GAAiB,IAGnB,OACE,cAACsF,GAAD,UACGE,GAAMjI,KAAI,SAACoI,EAAMC,GAAP,OACT,cAAC,IAAD,CAAqBC,GAAIF,EAAKF,KAAMK,OAAK,EAACC,gBAAgB,UAA1D,SACE,oBAAIrG,UAAWiG,EAAKrC,KAAM7D,QAAS6E,EAAnC,SACGqB,EAAKrC,QAFIsC,SC3EhBI,GAASrJ,IAAOC,IAAV,mGAkDGqJ,GA5CH,WACV,IAAMC,EAAS,CACb,CACET,KAAM,IACNpI,UAAW6H,IAEb,CACEO,KAAM,wBACNpI,UAAW6H,IAEb,CACEO,KAAM,aACNpI,UAAW6H,IAEb,CACEO,KAAM,aACNpI,UAAW8I,IAEb,CACEV,KAAM,MACNpI,UAAW+H,IAEb,CACEK,KAAM,UACNpI,UAAWgI,KAIf,OACE,cAACW,GAAD,UACE,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,GAAD,IACA,cAAC,IAAD,UACGE,EAAO3I,KAAI,WAAsB6I,GAAtB,IAAGX,EAAH,EAAGA,KAAMpI,EAAT,EAASA,UAAT,OACV,cAAC,IAAD,CAAOyI,OAAK,EAACL,KAAMA,EAAMpI,UAAWA,GAAgB+I,gBC5C5DvJ,GAAYF,IAAOC,IAAV,2FAiCAqJ,GA3BH,WACV,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,kCAIN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,KAAK,QAAZ,SACE,cAACY,GAAD,MAEF,cAAC,IAAD,CAAOZ,KAAK,IAAZ,SACE,cAACa,GAAD,eC5BZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef5a8bcf.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = (props) => {\n  return (\n    <Wrapper>\n      <Title>{props.title}</Title>\n      <Container>\n        <RenderComponent>{props.component}</RenderComponent>\n        <Documentation>\n          <tbody>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </tbody>\n          {props.propDocs.map((doc, i) => {\n            return (\n              <tbody key={i}>\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              </tbody>\n            );\n          })}\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = (props) => {\n  const size = sizeMapping[props.size];\n  const { color } = props;\n\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={size} color={color} />\n        <Dot size={size} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={size} color={color} />\n        <Dot size={size} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\nexport const COLORS = {\n  countdown: \"#316E94\",\n  stopwatch: \"#3FA2E0\",\n  xy: \"#E0BB34\",\n  tabata: \"#4E1394\",\n  purple: \"#7C28E0\",\n  start: \"#26DB5C\",\n  stop: \"#DB4E4E\",\n  reset: \"#2F333B\",\n  text: \"#FAF9F6\",\n  nav: \"#231F20\",\n};\n\nexport const BUTTONS = {\n  reset: \"bi bi-arrow-counterclockwise\",\n  start: \"bi bi-play-circle\",\n  stop: \"bi bi-pause-circle\",\n  settings: \"bi bi-list\",\n};\n\nexport const timerValue = (value) => {\n  const fullTime = new Date(value * 1000).toISOString();\n  const hours = fullTime.substr(12, 1);\n  const minutes = fullTime.substr(14, 2);\n  const seconds = fullTime.substr(17, 2);\n  return hours + \"h \" + minutes + \"m \" + seconds + \"s\";\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLORS, BUTTONS } from \"../../utils/helpers\";\n\nconst Btn = styled.button`\n  border-radius: 0.3rem;\n  // padding: 0.5rem;\n  border: none;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${COLORS.text};\n  transition: 0.2s ease;\n  :hover {\n    opacity: 0.6;\n  }\n  background-color: ${(props) =>\n    props.value === \"start\"\n      ? COLORS.start\n      : props.value === \"stop\"\n      ? COLORS.stop\n      : COLORS.reset};\n`;\n\nconst Button = (props) => {\n  Button.defaultProps = {\n    styleName: \"\",\n    value: \"\",\n    onClick: null,\n  };\n  const { value } = props;\n  return (\n    <Btn\n      className={props.styleName}\n      value={props.value}\n      onClick={props.onClick}\n    >\n      <i className={BUTTONS[value]}></i>\n    </Btn>\n  );\n};\nButton.propTypes = {\n  styleName: PropTypes.string,\n  value: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { createContext, useState } from \"react\";\n\nexport const TimerContext = createContext({\n  setBtnState: () => {\n    console.log(\"setBtnState: Im outside the Timerprovider\");\n  },\n  setSettingsState: () => {\n    console.log(\"setSettingsState: Im outside the Timerprovider\");\n  },\n});\n\nconst TimerProvider = ({ children }) => {\n  const [btnState, setBtnState] = useState(true);\n  const [settingsState, setSettingsState] = useState(false);\n  const [stopwatchTimer, setStopwatchTimer] = useState(true);\n  const [stopwatchSettings, setStopwatchSettings] = useState(false);\n  const [countdownTimer, setCountdownTimer] = useState(true);\n  const [countdownSettings, setCountdownSettings] = useState(false);\n  const [xyTimer, setXyTimer] = useState(true);\n  const [xySettings, setXySettings] = useState(false);\n  const [tabataTimer, setTabataTimer] = useState(true);\n  const [tabataSettings, setTabataSettings] = useState(false);\n  const [time, setTime] = useState(0);\n  const [rounds, setRounds] = useState(0);\n  const [rest, setRest] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [savedTime, setSavedTime] = useState(0);\n\n  return (\n    <TimerContext.Provider\n      value={{\n        savedTime,\n        setSavedTime,\n        isRunning,\n        setIsRunning,\n        time,\n        setTime,\n        rounds,\n        setRounds,\n        rest,\n        setRest,\n        btnState,\n        setBtnState,\n        settingsState,\n        setSettingsState,\n        stopwatchTimer,\n        setStopwatchTimer,\n        stopwatchSettings,\n        setStopwatchSettings,\n        countdownTimer,\n        setCountdownTimer,\n        countdownSettings,\n        setCountdownSettings,\n        xyTimer,\n        setXyTimer,\n        xySettings,\n        setXySettings,\n        tabataTimer,\n        setTabataTimer,\n        tabataSettings,\n        setTabataSettings,\n      }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nexport default TimerProvider;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { timerValue } from \"../../utils/helpers.js\";\n\nconst Display = styled.label`\n  margin-bottom: 2rem;\n  font-size: 3rem;\n  font-weight: 300;\n  // font-family: \"Orbitron\", sans-serif;\n  color: white;\n`;\n\nconst DisplayTime = (props) => {\n  Display.defaultProps = {\n    styleName: \"myClass\",\n  };\n  const { time } = useContext(TimerContext);\n  return <Display className={props.styleName}>{timerValue(time)}</Display>;\n};\nDisplay.propTypes = {\n  styleName: PropTypes.string,\n};\n\nexport default DisplayTime;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLORS } from \"../../utils/helpers.js\";\n\nconst Container = styled.div`\n  // border: 1px solid black;\n  width: 20rem;\n  background-color: ${(props) =>\n    props.type === \"Stopwatch\"\n      ? COLORS.stopwatch\n      : props.type === \"Countdown\"\n      ? COLORS.countdown\n      : props.type === \"XY\"\n      ? COLORS.xy\n      : COLORS.tabata};\n  // color: var(--blue);\n  // padding: 2rem 0 2rem 0;\n  // line-height: 30px;\n  font-size: 2rem;\n  border-radius: 0rem 0rem 0.3rem 0.3rem;\n`;\n\nconst Panel = (props) => {\n  Panel.defaultProps = {\n    timerType: \"Stopwatch\",\n  };\n  return (\n    <Container type={props.timerType} className=\"mainPanel\">\n      {props.children}\n    </Container>\n  );\n};\n\nPanel.propTypes = {\n  timerType: PropTypes.string,\n};\n\nexport default Panel;\n","import styled from \"styled-components\";\nimport { timerValue } from \"../../utils/helpers.js\";\nimport PropTypes from \"prop-types\";\nimport { COLORS } from \"../../utils/helpers.js\";\nimport React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\n\nconst SetInput = styled.input`\n  // border: 1px solid black;\n  color: ${(props) =>\n    props.type === \"Stopwatch\"\n      ? COLORS.stopwatch\n      : props.type === \"Countdown\"\n      ? COLORS.countdown\n      : props.type === \"XY\"\n      ? COLORS.xy\n      : COLORS.tabata};\n  font-size: 0.8rem;\n  border-radius: 0.5rem;\n  border: 0px;\n`;\n\nconst Credentials = styled.p`\n  font-size: 0.8rem;\n  color: ${COLORS.text};\n  padding-top: 0.5rem;\n`;\n\nconst Text = styled.p`\n  font-size: 1rem;\n  color: ${COLORS.text};\n  padding-top: 0.5rem;\n  margin-block-start: 0;\n  margin-block-end: 0;\n`;\n\nconst Settings = (props) => {\n  Settings.defaultProps = {\n    // type: \"Countdown\",\n    timerType: \"Countdown\",\n    placeholder: \"hh:mm:ss\",\n    placeholderRounds: \"hh:mm:ss\",\n    placeholderRest: \"hh:mm:ss\",\n  };\n\n  const { time, setTime } = useContext(TimerContext);\n  const { rounds, setRounds } = useContext(TimerContext);\n  const { rest, setRest } = useContext(TimerContext);\n\n  const handleChange = (e) => {\n    if (e.target.name === \"timer\") setTime(e.target.value);\n    else if (e.target.name === \"rounds\") setRounds(e.target.value);\n    else setRest(e.target.value);\n  };\n\n  return (\n    <div className=\"w-75\">\n      {props.timerType !== \"Stopwatch\" ? (\n        <>\n          <Text>\n            <label htmlFor=\"timer\">Set workout time</label>\n            <br />\n            {timerValue(time)}\n          </Text>\n          <SetInput\n            name=\"timer\"\n            type=\"range\"\n            placeholder={props.placeholder}\n            min=\"0\"\n            max=\"7200\"\n            step=\"15\"\n            value={time}\n            onChange={handleChange}\n          ></SetInput>\n        </>\n      ) : null}\n      {props.timerType === \"XY\" || props.timerType === \"Tabata\" ? (\n        <>\n          <Text>\n            <label htmlFor=\"rounds\">Set number of rounds</label>\n            <br />\n            {rounds}\n          </Text>\n          <SetInput\n            name=\"rounds\"\n            type=\"range\"\n            placeholder={props.placeholderRounds}\n            min=\"0\"\n            max=\"5\"\n            step=\"1\"\n            value={rounds}\n            onChange={handleChange}\n          ></SetInput>\n        </>\n      ) : null}\n      {props.timerType === \"Tabata\" ? (\n        <>\n          <Text>\n            <label htmlFor=\"rest\">Set rest time</label>\n            <br />\n            {timerValue(rest).substr(4, 6)}\n          </Text>\n          <SetInput\n            name=\"rest\"\n            type=\"range\"\n            placeholder={props.placeholderRest}\n            min=\"0\"\n            max=\"300\"\n            step=\"15\"\n            value={rest}\n            onChange={handleChange}\n          ></SetInput>\n        </>\n      ) : null}\n      <Credentials>By Martin Gundtoft</Credentials>\n    </div>\n  );\n};\n\nSettings.propTypes = {\n  type: PropTypes.string,\n  timerType: PropTypes.string,\n  placeholder: PropTypes.string,\n  placeholderRounds: PropTypes.string,\n  placeholderRest: PropTypes.string,\n};\n\nexport default Settings;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport DisplayTime from \"../components/generic/DisplayTime\";\nimport Panel from \"../components/generic/Panel\";\nimport Settings from \"../components/generic/Settings\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Button\"\n          component={<Button />}\n          propDocs={[\n            {\n              prop: \"btnState\",\n              description: \"Starts and stops the timer\",\n              type: \"boolean\",\n              defaultValue: \"true\",\n            },\n            {\n              prop: \"settingsState\",\n              description: \"Switches between main app and settings\",\n              type: \"boolean\",\n              defaultValue: \"false\",\n            },\n            {\n              prop: \"styleName\",\n              description: \"Has the classNames\",\n              type: \"String\",\n              defaultValue: \"settingsBtn\",\n            },\n            {\n              prop: \"type\",\n              description: \"Has the type of style for the given timer\",\n              type: \"String\",\n              defaultValue: \"Stopwatch\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"DisplayTime\"\n          component={<DisplayTime />}\n          propDocs={[\n            {\n              prop: \"styleName\",\n              description: \"Has the classNames\",\n              type: \"String\",\n              defaultValue: \"myClass\",\n            },\n            {\n              prop: \"time\",\n              description: \"Has the timer value\",\n              type: \"String\",\n              defaultValue: \"0\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Panel\"\n          component={<Panel />}\n          propDocs={[\n            {\n              prop: \"timerType\",\n              description: \"Has the type of timer\",\n              type: \"String\",\n              defaultValue: \"myClass\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Settings\"\n          component={<Settings />}\n          propDocs={[\n            {\n              prop: \"type\",\n              description: \"Has the type of timer\",\n              type: \"String\",\n              defaultValue: \"Countdown\",\n            },\n            {\n              prop: \"timerType\",\n              description: \"Has the type of timer settings\",\n              type: \"String\",\n              defaultValue: \"Countdown\",\n            },\n            {\n              prop: \"placeholder\",\n              description: \"Has the value of the input field for countdown\",\n              type: \"String\",\n              defaultValue: \"input\",\n            },\n            {\n              prop: \"placeholderRounds\",\n              description: \"Has the value of the input field for rounds\",\n              type: \"String\",\n              defaultValue: \"input\",\n            },\n            {\n              prop: \"placeholderRest\",\n              description: \"Has the value of the input field for rest\",\n              type: \"String\",\n              defaultValue: \"input\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import React, { useContext, useRef } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport Panel from \"../generic/Panel\";\nimport Settings from \"../generic/Settings\";\nimport Button from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport { COLORS } from \"../../utils/helpers\";\nimport { useTimerStarter } from \"../../utils/hooks\";\n\nconst Title = styled.h1`\n  color: ${COLORS.text};\n`;\nconst UpperPanel = styled.div`\n  position: relative;\n  height: 15rem;\n  .false {\n    color: ${COLORS.stop};\n    animation: pulse 1.2s ease infinite, color 0.3s ease;\n  }\n\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n\n  @keyframes color {\n    0% {\n      color: black;\n    }\n    100% {\n      color: ${COLORS.stop};\n    }\n  }\n\n  i.stopwatch {\n    font-size: 10rem;\n    opacity: 40%;\n    display: block;\n  }\n  .settingsBtn {\n    z-index: 1;\n    font-size: 1.5rem;\n    // display: block;\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    background-color: transparent;\n  }\n`;\nconst LowerPanel = styled.div`\n  height: 15rem;\n`;\n\nconst SettingsPanel = styled.div`\n  position: relative;\n  height: 25rem;\n  .settingsBtn {\n    z-index: 1;\n    font-size: 1.5rem;\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    background-color: transparent;\n  }\n`;\n\nconst Timer = (props) => {\n  const { time, setTime } = useContext(TimerContext);\n  const { stopwatchTimer, setStopwatchTimer } = useContext(TimerContext);\n  const { stopwatchSettings, setStopwatchSettings } = useContext(TimerContext);\n  const { countdownTimer, setCountdownTimer } = useContext(TimerContext);\n  const { countdownSettings, setCountdownSettings } = useContext(TimerContext);\n  const { tabataTimer, setTabataTimer } = useContext(TimerContext);\n  const { tabataSettings, setTabataSettings } = useContext(TimerContext);\n  const { xyTimer, setXyTimer } = useContext(TimerContext);\n  const { xySettings, setXySettings } = useContext(TimerContext);\n  const { isRunning, setIsRunning } = useContext(TimerContext);\n  const { btnState, setBtnState } = useContext(TimerContext);\n  const { settingsState, setSettingsState } = useContext(TimerContext);\n  const { savedTime, setSavedTime } = useContext(TimerContext);\n\n  // Alternative solution with less lines of code, but it seems \"eval\" is on the eslint most wanted list, so I decided to opt for the solution with conditionals (below). Maybe there's a better way to do what I am trying to do?\n\n  // timer.current = eval(props.timerType.toLowerCase() + \"Timer\");\n  // setTimer.current = eval(\"set\" + props.timerType + \"Timer\");\n  // settings.current = eval(props.timerType.toLowerCase() + \"Settings\");\n  // setSettings.current = eval(\"set\" + props.timerType + \"Settings\");\n\n  //Less elgant solution with switch, that works without eslint hiccups\n  const timer = useRef();\n  const setTimer = useRef();\n  const settings = useRef();\n  const setSettings = useRef();\n\n  switch (props.timerType) {\n    case \"Stopwatch\": {\n      timer.current = stopwatchTimer;\n      setTimer.current = setStopwatchTimer;\n      settings.current = stopwatchSettings;\n      setSettings.current = setStopwatchSettings;\n      break;\n    }\n    case \"Countdown\": {\n      timer.current = countdownTimer;\n      setTimer.current = setCountdownTimer;\n      settings.current = countdownSettings;\n      setSettings.current = setCountdownSettings;\n      break;\n    }\n    case \"XY\": {\n      timer.current = xyTimer;\n      setTimer.current = setXyTimer;\n      settings.current = xySettings;\n      setSettings.current = setXySettings;\n      break;\n    }\n    case \"Tabata\": {\n      timer.current = tabataTimer;\n      setTimer.current = setTabataTimer;\n      settings.current = tabataSettings;\n      setSettings.current = setTabataSettings;\n      break;\n    }\n    default: {\n      console.log(\"no timer selected\");\n    }\n  }\n\n  const handleClick = (e) => {\n    if (props.timerType === \"Stopwatch\") {\n      setSavedTime(0);\n    }\n    if (e.currentTarget.value === \"reset\") {\n      setTime(savedTime);\n      setIsRunning(false);\n    }\n\n    if (e.currentTarget.value === \"start\" || e.currentTarget.value === \"stop\") {\n      setIsRunning(!isRunning);\n      setBtnState(!btnState);\n    }\n    if (e.currentTarget.value === \"settings\") {\n      setSettingsState(!settingsState);\n      setSavedTime(time);\n    }\n  };\n  useTimerStarter(props.timerType);\n\n  if (!settingsState || props.timerType === \"Stopwatch\") {\n    return (\n      <Panel timerType={props.timerType}>\n        <UpperPanel className=\"text-center\">\n          <Title>{props.timerType}</Title>\n          {props.timerType !== \"Stopwatch\" ? (\n            <Button\n              styleName=\"settingsBtn\"\n              btnState={timer.current}\n              settingsState={settings.current}\n              setBtnState={setTimer.current}\n              setSettingsState={setSettings.current}\n              onClick={handleClick}\n              value=\"settings\"\n            ></Button>\n          ) : null}\n          <i className={`bi bi-stopwatch stopwatch ${!isRunning}`}></i>\n        </UpperPanel>\n        <LowerPanel className=\"d-flex align-items-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <DisplayTime\n                styleName=\"col text-center\"\n                // time={timerValue(time)}\n              />\n            </div>\n            <div className=\"row justify-content-around\">\n              <Button\n                styleName=\"col-5\"\n                btnState={timer.current}\n                value={btnState ? \"start\" : \"stop\"}\n                setBtnState={setTimer.current}\n                onClick={handleClick}\n              ></Button>\n              <Button\n                styleName=\"col-5\"\n                btnState={timer.current}\n                value=\"reset\"\n                setBtnState={setTimer.current}\n                onClick={handleClick}\n              ></Button>\n            </div>\n          </div>\n        </LowerPanel>\n      </Panel>\n    );\n  }\n  return (\n    <Panel timerType={props.timerType}>\n      <SettingsPanel className=\"settingspanel text-center d-flex align-items-center justify-content-center\">\n        <Button\n          type=\"settingsBtn\"\n          styleName=\"settingsBtn\"\n          btnState={timer.current}\n          settingsState={settings.current}\n          setBtnState={setTimer.current}\n          setSettingsState={setSettings.current}\n          onClick={handleClick}\n          value=\"settings\"\n        ></Button>\n        <Settings styleName=\"p-2\" timerType={props.timerType}></Settings>\n      </SettingsPanel>\n    </Panel>\n  );\n};\nexport default Timer;\n","import { useContext, useRef, useEffect, useState } from \"react\";\nimport { TimerContext } from \"../TimerProvider\";\n\nexport const useTimerStarter = (timerType) => {\n  const [delay] = useState(1000);\n  const { isRunning } = useContext(TimerContext);\n  const { time, setTime } = useContext(TimerContext);\n\n  useInterval(\n    () => {\n      if (timerType === \"Stopwatch\") {\n        setTime(Number(time) + 1);\n      } else {\n        setTime(Number(time) - 1);\n      }\n    },\n    isRunning ? delay : null\n  );\n\n  //   function handleDelayChange(e) {\n  //     setDelay(Number(e.target.value));\n  //   }\n\n  //   function handleIsRunningChange(e) {\n  //     setIsRunning(e.target.checked);\n  //   }\n\n  function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n};\n","import React from \"react\";\nimport Timer from \"../generic/Timer.js\";\n\nconst Stopwatch = () => {\n  const timerType = \"Stopwatch\";\n\n  return <Timer timerType={timerType}></Timer>;\n};\nexport default Stopwatch;\n","import React from \"react\";\nimport Timer from \"../generic/Timer.js\";\n\nconst CountDown = () => {\n  const timerType = \"Countdown\";\n\n  return <Timer timerType={timerType}></Timer>;\n};\nexport default CountDown;\n","import React from \"react\";\nimport Timer from \"../generic/Timer.js\";\n\nconst XY = () => {\n  const timerType = \"XY\";\n\n  return <Timer timerType={timerType}></Timer>;\n};\nexport default XY;\n","import React from \"react\";\nimport Timer from \"../generic/Timer.js\";\n\nconst Tabata = () => {\n  const timerType = \"Tabata\";\n\n  return <Timer timerType={timerType}></Timer>;\n};\nexport default Tabata;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport { NavLink } from \"react-router-dom\";\nimport { COLORS } from \"../../utils/helpers\";\nimport styled from \"styled-components\";\n\nconst NavList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0.5rem 0;\n  overflow: hidden;\n  border-radius: 0.3rem 0.3rem 0rem 0rem;\n  width: 20rem;\n\n  a {\n    color: ${COLORS.text};\n    text-decoration: none;\n  }\n  .Stopwatch,\n  .Countdown,\n  .XY,\n  .Tabata {\n    background-color: ${COLORS.nav};\n    transition: 0.5s;\n  }\n  .Stopwatch:hover {\n    background-color: ${COLORS.stopwatch};\n  }\n  .Countdown:hover {\n    background-color: ${COLORS.countdown};\n  }\n  .Tabata:hover {\n    background-color: ${COLORS.tabata};\n  }\n  .XY:hover {\n    background-color: ${COLORS.xy};\n  }\n\n  li {\n    display: inline;\n    list-style-type: none;\n    text-decoration: none;\n    padding: 0.75rem;\n  }\n  .current {\n    .Stopwatch {\n      background-color: ${COLORS.stopwatch};\n    }\n    .Countdown {\n      background-color: ${COLORS.countdown};\n    }\n    .XY {\n      background-color: ${COLORS.xy};\n    }\n    .Tabata {\n      background-color: ${COLORS.tabata};\n    }\n  }\n  .active {\n    background-color: #04aa6d;\n  }\n`;\n\nconst links = [\n  { name: \"Stopwatch\", path: \"/\" },\n  { name: \"Countdown\", path: \"/Countdown\" },\n  { name: \"XY\", path: \"/XY\" },\n  { name: \"Tabata\", path: \"/Tabata\" },\n];\n\nconst Navbar = () => {\n  const { setTime } = useContext(TimerContext);\n  const { setIsRunning } = useContext(TimerContext);\n  const { setBtnState } = useContext(TimerContext);\n  const { setSettingsState } = useContext(TimerContext);\n\n  const handleClick = () => {\n    setTime(0);\n    setIsRunning(false);\n    setBtnState(true);\n    setSettingsState(true);\n  };\n\n  return (\n    <NavList>\n      {links.map((link, index) => (\n        <NavLink key={index} to={link.path} exact activeClassName=\"current\">\n          <li className={link.name} onClick={handleClick}>\n            {link.name}\n          </li>\n        </NavLink>\n      ))}\n    </NavList>\n  );\n};\nexport default Navbar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\nimport TimerProvider from \"../TimerProvider\";\nimport Navbar from \"../components/generic/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst App = () => {\n  const routes = [\n    {\n      path: \"/\",\n      component: Stopwatch,\n    },\n    {\n      path: \"/assignment-2-keamarg\",\n      component: Stopwatch,\n    },\n    {\n      path: \"/Stopwatch\",\n      component: Stopwatch,\n    },\n    {\n      path: \"/Countdown\",\n      component: Countdown,\n    },\n    {\n      path: \"/XY\",\n      component: XY,\n    },\n    {\n      path: \"/Tabata\",\n      component: Tabata,\n    },\n  ];\n\n  return (\n    <Timers>\n      <Router>\n        <TimerProvider>\n          <Navbar />\n          <Switch>\n            {routes.map(({ path, component }, key) => (\n              <Route exact path={path} component={component} key={key} />\n            ))}\n          </Switch>\n        </TimerProvider>\n      </Router>\n    </Timers>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n// import AppProvider from \"./AppProvider\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Timers</Link>\n            </li>\n            <li>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimersView />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}